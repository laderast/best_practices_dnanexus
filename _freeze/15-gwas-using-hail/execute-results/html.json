{
  "hash": "2fcd1e1ab83e2a203f0db6622e251264",
  "result": {
    "markdown": "---\ntitle: \"GWAS using Hail\"\n---\n\n## Basic GWAS Process\n\nThis table shows the basic GWAS process using Hail. We will cover each of these in the sections below.\n\n|Step|Description|Code Example|\n|------|------------|---------|\n|0.|Initiate Spark and Hail|See Notebook |\n|1.|Load pVCF/BGEN data, save as MatrixTable (MT) @sec-loading_data|`mt = hl.import_vcf(path)` or `mt = hl.import_bgen(path)`|\n|2.|Load Pheno file, merge with MatrixTable @sec-load_pheno|`phenogeno_mt = mt.annotate_cols(**pheno_table[mt.s])`|\n|3.|Build Sample QC table from MT, use to filter MT @sec-sample_table|`sample_qc_tb = hl.sample_qc(mt);` `qc_mt = phenogeno_mt.semi_join_rows(locus_qc_tb)`|\n|4.|Build Locus QC table from MT, use to filter MT @sec-variant_table|`locus_qc_tb = hl.locus_qc(mt);` `qc_mt = qc_mt.semi_join_cols(sample_qc_tb)`|\n|5.| Run GWAS @sec-gwas |`gwas_tb = hl.logistic_regression.rows()`|\n|6.| Visualize Results @sec-visualize|`manhattan_plot = hl.plot.manhattan(gwas_tb.p_value)`; `show(manhattan_plot)`|\n|7.|Annotate Results with VEP or annotation db @sec-annotate|`ann_gwas_tb = db.annotate_rows_db(gwas_tb, 'gencode'`|\n|8.|Save results to CSV, export chromosomes as BGEN file|See Notebook|\n\n## Load pVCF/BGEN data, save as MatrixTable {#sec-loading_data}\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# read MT\nmt_url=\"dnax://database-GQYV2Bj04bPg9X3KfFyj2jyY/geno.mt\"\nmt = hl.read_matrix_table(mt_url)\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nmt.rows().show()\n```\n:::\n\n\n## Load Pheno File, merge with MatrixTable {#sec-load_pheno}\n\n\n\n## Build Sample QC table from MT, use to filter MT {#sec-sample_table}\n\n## Build Variant QC table from MT, use to filter MT {#sec-variant_table}\n\n## Run GWAS {#sec-gwas}\n\n## Visualize Results {#sec-visualize}\n\n## Annotate GWAS table {#sec-annotate}\n\n",
    "supporting": [
      "15-gwas-using-hail_files"
    ],
    "filters": [],
    "includes": {}
  }
}